# .env.example - Skopiuj ten plik do .env i uzupełnij wartości

# --- Konfiguracja Ogólna ---
OUTPUT_DIR="./pki_srodowisko"

# --- Konfiguracja CA (Centrum Certyfikacji) ---
CA_KEY_FILE_NAME="ca.klucz.pem"
CA_CERT_FILE_NAME="ca.certyfikat.pem"
CA_SERIAL_FILE_NAME="ca.srl"
CA_SUBJECT="/C=PL/ST=Zachodniopomorskie/L=Szczecin/O=Moje Wlasne CA via Env/CN=Moje Wlasne CA Root Env"
# UWAGA: Przechowywanie haseł w plikach .env jest wygodne dla dewelopmentu,
# ale w środowisku produkcyjnym rozważ bezpieczniejsze metody zarządzania sekretami (np. HashiCorp Vault, AWS Secrets Manager)
# Jeśli pozostawisz CA_KEY_PASSWORD pustym, skrypt może nie działać poprawnie z obecną strukturą poleceń.
# Aby OpenSSL pytał interaktywnie, należałoby zmodyfikować logikę budowania poleceń w opensslExecutor.ts.
CA_KEY_PASSWORD="superTajneHasloZEnv123!"

# --- Konfiguracja Podmiotu (np. serwera lub klienta) ---
ENTITY_KEY_FILE_NAME="podmiot.klucz.pem"
ENTITY_CSR_FILE_NAME="podmiot.csr.pem"
ENTITY_CERT_FILE_NAME="podmiot.certyfikat.pem"
ENTITY_SUBJECT="/C=PL/ST=Mazowieckie/L=Warszawa/O=Moja Firma Env/CN=serwer.przyklad-env.com"

# --- Opcje certyfikatów ---
CA_CERT_DAYS="3650"
ENTITY_CERT_DAYS="365"